{"version":3,"sources":["Components/LandingPage/LandingPage.jsx","Redux/actions/index.js","Components/Card/Card.jsx","Components/Pages/Pages.jsx","Components/SearchBar/SearchBar.jsx","Components/Home/Home.jsx","Components/Details/Details.jsx","Components/CreateActivity/CreateActivity.jsx","App.js","reportWebVitals.js","Redux/reducer/index.js","Redux/store/index.js","index.js"],"names":["LandingPage","to","GET_COUNTRY","GET_COUNTRY_BY_NAME","GET_DETAILS","ORDER_BY_COUNTRY","FILTER_BY_CONTINENT","ORDER_BY_POPULATION","GET_ONLY_COUNTRIES","GET_ACTIVITY","COUNTRY_BY_ACTIVITY","getCountry","dispatch","axios","get","country","type","payload","data","console","log","getActivity","activity","Card","name","continent","flag","id","src","alt","Pages","countryPerPage","allCountries","paging","pageNumbers","i","Math","ceil","push","map","num","onClick","SearchBar","setCurrentPage","useDispatch","useState","setName","handleSubmit","e","preventDefault","countryByName","alert","getCountryByName","onSubmit","placeholder","value","onChange","target","handleChange","Home","useSelector","state","allActivities","activityName","a","currentPage","setCountryPerPage","setInOrder","indexOfLastCountry","indexOfFirstCountry","CountriesOnCurrentPage","slice","handleCountryByActivity","useEffect","handleSortCountry","handleFilterByContinent","handleSortPopulation","length","window","location","reload","handleClick","c","pageNum","Details","useParams","countryDetail","details","getDetails","hasOwnProperty","capital","subregion","parseInt","area","toLocaleString","population","act","season","span","difficulty","validate","input","errors","countries","CreateActivity","goBack","useNavigate","onlyCountries","setErrors","setInput","Object","keys","post","nameActivity","handleCheck","disabled","hidden","handleSelect","el","filter","handleDelete","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","countriesSorted","sort","b","nameCountry","CountriesByContinent","filteredByContinent","sortedByPopulation","filteredByActivity","find","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82d504c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function LandingPage(){\r\n\r\n    return(\r\n        <div>\r\n            <h1>WELCOME TO COUNTRIES APP</h1>\r\n            <Link to= \"/home\">\r\n                <button>Let's get started</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}","import axios from 'axios';\r\nexport const GET_COUNTRY = 'GET_COUNTRY';\r\nexport const GET_COUNTRY_BY_NAME = 'GET_COUNTRY_BY_NAME';\r\nexport const GET_DETAILS = 'GET_DETAILS';\r\nexport const ORDER_BY_COUNTRY = 'ORDER_BY_COUNTRY';\r\nexport const FILTER_BY_CONTINENT = 'FILTER_BY_CONTINENT';\r\nexport const ORDER_BY_POPULATION = 'ORDER_BY_POPULATION';\r\nexport const GET_ONLY_COUNTRIES = 'GET_ONLY_COUNTRIES';\r\nexport const GET_ACTIVITY = 'GET_ACTIVITY';\r\nexport const COUNTRY_BY_ACTIVITY = 'COUNTRY_BY_ACTIVITY';\r\n\r\nexport function getCountry(){\r\n    return async function(dispatch) {\r\n        try {\r\n            let country = await axios.get(\"http://localhost:3001/country\");\r\n\r\n        return dispatch({\r\n            type: \"GET_COUNTRY\",\r\n            payload: country.data\r\n        })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function getCountryByName(name){\r\n    return async function(dispatch) {\r\n        try {\r\n            let countryByName = await axios.get(`http://localhost:3001/country?name=${name}`);\r\n\r\n            return dispatch({\r\n              type: \"GET_COUNTRY_BY_NAME\",\r\n              payload: countryByName.data\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert(\"Country not found\")\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDetails(id) {\r\n    return async function(dispatch) {\r\n        try {\r\n            let details = await axios.get(`http://localhost:3001/country/${id}`).data\r\n            \r\n            return dispatch({\r\n                type: \"GET_DETAILS\",\r\n                payload: details\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function orderByCountry(payload){\r\n    return{\r\n        type: \"ORDER_BY_COUNTRY\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function filterByContinent(payload){\r\n    return {\r\n      type: \"FILTER_BY_CONTINENT\",\r\n      payload\r\n    }\r\n  }\r\n  \r\n  export function orderByPopulation(payload){\r\n    return {\r\n      type: \"ORDER_BY_POPULATION\",\r\n      payload\r\n    }\r\n  }\r\n\r\n  export function getOnlyCountries(){\r\n    return async function(dispatch) {\r\n        try {\r\n            let onlyCountries = await axios.get(\"http://localhost:3001/countriesList\").data\r\n            console.log(onlyCountries)\r\n\r\n            return dispatch({\r\n                type: \"GET_ONLY_COUNTRIES\",\r\n                payload: onlyCountries\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n  }\r\n\r\n  export function postActivity(payload){\r\n    return async function(dispatch){\r\n        try {\r\n            let activity = await axios.post(\"http://localhost:3001/activity\", payload).data\r\n            console.log(activity)\r\n\r\n            return dispatch({\r\n                type: \"GET_ACTIVITY\",\r\n                payload: activity\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n  }\r\n\r\n  export function getActivity(){\r\n    return async function(dispatch){\r\n        try {\r\n            let activity = await axios.get(\"http://localhost:3001/activity\").data;\r\n            console.log(activity)\r\n\r\n            return dispatch({\r\n                type: \"GET_ACTIVITY\",\r\n                payload: activity\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n  }\r\n\r\n  export function countryByActivity(payload){\r\n    console.log(\"pay \" + payload);\r\n    return {\r\n        type: \"COUNTRY_BY_ACTIVITY\",\r\n        payload\r\n    }\r\n  }\r\n\r\n\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Card({name, continent, flag, id}){\r\n    return(\r\n        <div>\r\n            <Link to={`/country/${id}`}>\r\n\r\n            <img src={flag} alt=\"Bandera del país\"/>\r\n            <h2>{name}</h2>\r\n            <h4>{continent}</h4>\r\n            \r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function Pages({countryPerPage, allCountries, paging}) {\r\n    const pageNumbers = [];\r\n\r\n    for(let i=1; i<Math.ceil(allCountries/countryPerPage); i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return(\r\n        <nav>\r\n            <ul>\r\n                {pageNumbers &&\r\n                  pageNumbers.map(num => {\r\n                    return( <button \r\n                    key={num} onClick={() => paging(num)}>{num}\r\n                    </button>    \r\n                    )\r\n                  })\r\n                }\r\n\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCountryByName } from \"../../Redux/actions/index.js\";\r\n\r\n\r\nexport default function SearchBar({setCurrentPage}){\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState(\"\");\r\n\r\n\r\n\r\n    function handleChange(e){\r\n        setName(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        if(!name){\r\n            alert(\"Escriba por favor un nombre de país válido.\")\r\n        } else{\r\n            dispatch(getCountryByName(name));\r\n            setCurrentPage(1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e)=>handleSubmit(e)}>\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"Country name...\" \r\n                value={name} \r\n                onChange={(e)=>handleChange(e)}\r\n                />\r\n                <input \r\n                type=\"submit\" \r\n                value=\"Search\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { React } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport{\r\n    getCountry,\r\n    orderByCountry,\r\n    filterByContinent,\r\n    orderByPopulation,\r\n    getActivity,\r\n    countryByActivity\r\n} from \"../../Redux/actions/index.js\";\r\nimport Card from \"../Card/Card.jsx\";\r\nimport Pages from \"../Pages/Pages.jsx\";\r\nimport SearchBar from \"../SearchBar/SearchBar.jsx\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Home(){\r\n    const dispatch = useDispatch();\r\n    const allCountries = useSelector((state) => state.allCountries);\r\n    const allActivities = useSelector((state) => state.activity);\r\n    const activityName = allActivities?.map(a => a.name);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [countryPerPage, setCountryPerPage] = useState(9);\r\n    const [,setInOrder] = useState('');\r\n\r\n\r\n\r\n    const indexOfLastCountry = currentPage * countryPerPage;\r\n    const indexOfFirstCountry = indexOfLastCountry - countryPerPage;\r\n    const CountriesOnCurrentPage = allCountries.slice(indexOfFirstCountry, indexOfLastCountry);\r\n\r\n\r\n\r\n    function paging(pageNum){\r\n        setCurrentPage(pageNum);\r\n        if(pageNum === 1){\r\n            setCountryPerPage(9);\r\n            \r\n        } else{\r\n            setCountryPerPage(10);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCountry());\r\n        dispatch(getActivity());\r\n    }, [dispatch])\r\n\r\n    function handleClick(e) {\r\n        e.preventDefault();\r\n        dispatch(getCountry());\r\n        dispatch(getActivity())\r\n        window.location.reload();\r\n    }\r\n\r\n    function handleFilterByContinent(e) {\r\n        e.preventDefault();\r\n        setCurrentPage(1);\r\n        dispatch(filterByContinent(e.target.value));\r\n    }\r\n\r\n    function handleSortCountry(e) {\r\n        e.preventDefault();\r\n        dispatch(orderByCountry(e.target.value));\r\n        setCurrentPage(1);\r\n        setInOrder(`Ordered by the alphabeth ${e.target.value}`);\r\n    }\r\n\r\n    function handleSortPopulation(e) {\r\n        e.preventDefault();\r\n        dispatch(orderByPopulation());\r\n        setCurrentPage(1);\r\n        setInOrder(`Ordered by population ${e.target.value}`)\r\n    }\r\n\r\n    function handleCountryByActivity(e) {\r\n        e.preventDefault();\r\n        dispatch(countryByActivity(e.target.value))\r\n        setCurrentPage(1);\r\n        setInOrder(`Ordered by activity ${e.target.value}`)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <SearchBar setCurrentPage = {setCurrentPage} />\r\n\r\n            <div >\r\n                <div >\r\n                    <h3>Busqueda por:</h3>\r\n                </div>\r\n                <div >\r\n                    <select onChange = {e => handleSortCountry(e)}>\r\n                        <option>Alphabet order</option>\r\n                        <option value= \"asc\">A-Z</option>\r\n                        <option value= \"desc\">Z-A</option>\r\n                    </select>\r\n                </div>\r\n                <div >\r\n                    <label>Continent:</label>\r\n                    <select onChange={e => handleFilterByContinent(e)}>\r\n                     <option value=''>---</option>\r\n                     <option value='Africa'>África</option>\r\n                     <option value='Americas'>América</option>\r\n                     <option value='Antarctic'>Antártica</option>\r\n                     <option value='Asia'>Asia</option>\r\n                     <option value='Europe'>Europa</option>\r\n                     <option value='Oceania'>Oceanía</option>    \r\n                    </select>\r\n                </div>\r\n                <div >\r\n                    <select onChange={e => handleSortPopulation(e)}>\r\n                     <option>Population</option>\r\n                     <option value='low'>smallest to largest population</option>\r\n                     <option value='high'>largest to smallest population</option>\r\n                    </select>\r\n                </div>\r\n                <div >\r\n                <label>Activities: </label>\r\n                 {activityName?.length === 0 ?\r\n                 <Link to=\"/createActivity\">\r\n                    <p>Create activities</p>\r\n                 </Link>\r\n                  \r\n                  : <select onChange={e => handleCountryByActivity(e)}>\r\n                  {activityName?.map((e) => {\r\n                    return (\r\n                      <option key={e} value={e}> {e} </option>\r\n                    )\r\n                })}\r\n                </select>\r\n              }\r\n                </div>\r\n                <div >\r\n                    <button onClick={e => handleClick(e)}>Limpiar filtro</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div >\r\n                {\r\n                    CountriesOnCurrentPage?.map(c => {\r\n                        return(\r\n                            <Card \r\n                            name={c.name} \r\n                            continent={c.continent} \r\n                            flag={c.flag} id={c.id} \r\n                            key={c.id}/>\r\n                        )\r\n\r\n                    })\r\n                \r\n                }\r\n            </div>\r\n\r\n            <Pages\r\n            countryPerPage={countryPerPage}\r\n            allCountries={allCountries.length}\r\n            paging={paging}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDetails } from \"../../Redux/actions/index.js\";\r\n\r\n\r\nexport default function Details(){\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const countryDetail = useSelector((state) => state.details);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDetails(id));\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            {\r\n              countryDetail?.hasOwnProperty(\"name\") &&\r\n              <div>\r\n                <div>\r\n                  <img src={countryDetail.flag} alt= \"Bandera\"/>\r\n                  <h2>{countryDetail.name}</h2>\r\n                  <h3><i>Capital</i> {countryDetail.capital[0]}</h3>\r\n                  <h4><i>Code:</i> {countryDetail.id}</h4>\r\n                  <h4><i>Subregion:</i> {countryDetail.subregion}</h4>\r\n                  <h4><i>Area:</i> {parseInt(countryDetail.area).toLocaleString('de-DE')} Km2</h4>\r\n                  <h4><i>Population:</i> {countryDetail.population.toLocaleString('de-DE')}</h4>\r\n              </div>\r\n              <div>\r\n                 <h2><i>Touristic Activities:</i></h2>\r\n                 <br/>\r\n                 {\r\n                    countryDetail.activity?.length > 0 ?\r\n                    countryDetail.activity.map(act => (\r\n                        <p key={act.id}>\r\n                          <li>Activity: {act.name}</li>\r\n                          <li>Season: {act.season}</li>\r\n                          <li>Span: {act.span}</li>\r\n                          <li>Difficulty: {act.difficulty}</li>\r\n                          <br/>\r\n                        </p>\r\n                    )) :\r\n                    <h2>¡It has no activities!</h2>\r\n                 }\r\n              </div>\r\n              </div> \r\n              //: <p>Details not found</p>\r\n            }\r\n\r\n            <div>\r\n                <Link to=\"/home\">❮❮ Return</Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postActivity, getOnlyCountries } from '../../Redux/actions/index.js';\r\n\r\n\r\n\r\nfunction validate(input){\r\n    let errors = {};\r\n    if(!input.name){\r\n      errors.name = \"Activity name is required\";\r\n    }\r\n\r\n    if(!input.difficulty){\r\n        errors.difficulty = \"Difficulty is required\";\r\n    }\r\n\r\n    if(!input.span){\r\n      errors.span = \"Activity span is required\";\r\n    } else if(input.span.length !== 4){\r\n        errors.span = \"should have 3 characters (2 hr)\";\r\n    }\r\n\r\n    if(!input.season){\r\n        errors.season = \"Season is required\";\r\n    }\r\n\r\n    if(input.countries.length === 0){\r\n        errors.countries = \"should assign at least a country to the activity\";\r\n    }\r\n  \r\n    return errors;\r\n}\r\n\r\n\r\nexport default function CreateActivity(){\r\n    const dispatch = useDispatch();\r\n    const goBack = useNavigate();\r\n    const onlyCountries = useSelector((state) => state.onlyCountries);\r\n    const [errors, setErrors] = useState({\r\n        name: \"\",\r\n        difficulty: \"\",\r\n        span: \"\",\r\n        season: \"\",\r\n        countries: \"\"\r\n    });\r\n    const [input, setInput] = useState({\r\n        name:\"\",\r\n        difficulty: \"\",\r\n        span:\"\",\r\n        season: \"\",\r\n        country: []\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getOnlyCountries())\r\n    },[])\r\n\r\n\r\n    function handleChange(e){\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        }) ;\r\n        setErrors(validate({\r\n            ...input,\r\n            [e.target.value]: e.target.value\r\n        }));\r\n    }\r\n\r\n\r\n    function handleCheck(e){\r\n        setInput({\r\n            ...input,\r\n            season: e.target.value\r\n        })\r\n        setErrors(validate({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n\r\n    function handleSelect(e){\r\n        setInput({\r\n            ...input,\r\n            country: [...input.country, e.target.value]\r\n        })\r\n        setErrors(validate({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n\r\n    function handleDelete(el){\r\n        setInput({\r\n            ...input,\r\n            country: input.country.filter(c => c !== el)\r\n        })\r\n    }\r\n\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        setErrors(validate(input))\r\n        if(Object.keys(errors).length === 0){\r\n            dispatch(postActivity(e))\r\n            alert(\"Activity created\");\r\n            setInput({\r\n                nameActivity: \"\",\r\n                difficulty: \"\",\r\n                span: \"\",\r\n                season: \"\",\r\n                country: []\r\n              })\r\n              goBack('/home')\r\n\r\n        } else{\r\n            alert(\"There are some data missing\");\r\n\r\n        }       \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create Touristic Activity</h1>\r\n\r\n            <form onSubmit={e => handleSubmit(e)}>\r\n\r\n              <div>\r\n               <label>Touristic Activity: </label>\r\n               <input \r\n               type= \"text\"\r\n               value= {input.name}\r\n               name= \"name\"\r\n               onChange={(e)=> handleChange(e)} \r\n               />\r\n               {errors.name && (<p>{errors.name}</p>)}\r\n              </div>\r\n\r\n              <div>\r\n              <label>Difficulty: </label>\r\n              |<input \r\n              type= \"radio\"\r\n              value= \"1\"\r\n              name= \"difficulty\"\r\n              onChange={(e)=> handleChange(e)}\r\n              />1|\r\n              |<input \r\n              type= \"radio\"\r\n              value= \"2\"\r\n              name= \"difficulty\"\r\n              onChange={(e)=> handleChange(e)}\r\n              />2|\r\n              |<input \r\n              type= \"radio\"\r\n              value= \"3\"\r\n              name= \"difficulty\"\r\n              onChange={(e)=> handleChange(e)}\r\n              />3|\r\n              |<input \r\n              type= \"radio\"\r\n              value= \"4\"\r\n              name= \"difficulty\"\r\n              onChange={(e)=> handleChange(e)}\r\n              />4|\r\n              |<input \r\n              type= \"radio\"\r\n              value= \"5\"\r\n              name= \"difficulty\"\r\n              onChange={(e)=> handleChange(e)}\r\n              />5|\r\n              {errors.difficulty && (<p>{errors.difficulty}</p>)}\r\n              </div>\r\n\r\n              <div>\r\n              <label>Span:</label>\r\n              <input \r\n              type= \"text\"\r\n              value= {input.span}\r\n              name= \"span\"\r\n              onChange={(e)=> handleChange(e)}\r\n              placeholder=\"Tiempo en horas. Ej: 2 hr\"\r\n              />\r\n              {errors.span && (<p>{errors.span}</p>)}\r\n              </div>\r\n\r\n              <div>\r\n              <label>Season:</label>\r\n              <select onChange={(e)=> handleCheck(e)}>\r\n              <option disabled hidden>Season</option>\r\n              <option value= \"summer\">Summer</option>\r\n              <option value= \"autumn\">Autumn</option>\r\n              <option value= \"winter\">Winter</option>\r\n              <option value= \"spring\">Spring</option>\r\n              </select>\r\n              {errors.season && (<p>{errors.season}</p>)}\r\n              </div>\r\n\r\n              <div>\r\n              <label>Countries: </label> \r\n              <select onChange={(e)=> handleSelect(e)}>\r\n              {/*<option disabled hidden>Countries</option>*/}\r\n              {onlyCountries? onlyCountries.map(c => {\r\n                return (\r\n                    <option key={c.name} value={c.name}>{c.name}</option>\r\n                )\r\n              }): \"No hay paises para seleccionar\"\r\n            }\r\n              </select>\r\n              {errors.countries && (<p>{errors.countries}</p>)}\r\n              </div>\r\n\r\n            {input.country? input.country.map(el => {\r\n                return (\r\n                    <div key={el}>\r\n                    <h4>{el}</h4>\r\n                    <button onClick={()=> handleDelete(el)}>x</button>\r\n                    </div>\r\n                )\r\n              }):\"No hay paises a eliminar\"\r\n            }\r\n\r\n              <div>\r\n              <button type='submit' disabled={errors.name || errors.difficulty || errors.span || errors.season || errors.countries ? true : false}>Create</button>\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div><Link to='/home'>❮❮ Back</Link></div>\r\n\r\n        </div>        \r\n    );\r\n}","import './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport LandingPage from './Components/LandingPage/LandingPage.jsx';\nimport Home from './Components/Home/Home.jsx';\nimport Details from './Components/Details/Details.jsx';\nimport CreateActivity from './Components/CreateActivity/CreateActivity.jsx';\n\nfunction App() {\n    return (\n      <Routes>\n          <Route exact path=\"/\" element={<LandingPage/>} />\n          <Route path=\"/home\" element={<Home/>} />\n          <Route path=\"/country/:id\" element={<Details/>} />\n          <Route path=\"/createActivity\" element={<CreateActivity/>} />\n      </Routes>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  GET_COUNTRY,\r\n  GET_COUNTRY_BY_NAME,\r\n  GET_DETAILS,\r\n  ORDER_BY_COUNTRY,\r\n  FILTER_BY_CONTINENT,\r\n  ORDER_BY_POPULATION,\r\n  GET_ONLY_COUNTRIES,\r\n  GET_ACTIVITY,\r\n  COUNTRY_BY_ACTIVITY\r\n} from \"../actions/index.js\";\r\n\r\nconst initialState = {\r\n    country: [],\r\n    allCountries: [],\r\n    details: {},\r\n    onlyCountries: [],\r\n    activity: []\r\n}\r\n\r\nfunction reducer(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COUNTRY:\r\n            return{\r\n                ...state,\r\n                country: action.payload,\r\n                allCountries: action.payload             \r\n            };\r\n        \r\n        case GET_COUNTRY_BY_NAME:\r\n            return{\r\n                ...state,\r\n                country: action.payload\r\n            };\r\n\r\n        case GET_DETAILS:\r\n            return{\r\n                ...state,\r\n                details: action.payload\r\n            };\r\n\r\n        case ORDER_BY_COUNTRY:\r\n            let countriesSorted = action.payload === 'asc' ?\r\n            state.country.sort(function (a,b) {\r\n              if (a.nameCountry > b.nameCountry){\r\n                return 1;\r\n              }\r\n              if (b.nameCountry > a.nameCountry){\r\n                return -1;\r\n              }\r\n              return 0;\r\n            }) :\r\n            state.country.sort(function (a,b) {\r\n              if (a.nameCountry > b.nameCountry){\r\n                return -1;\r\n              }\r\n              if (b.nameCountry > a.nameCountry){\r\n                return 1;\r\n              }\r\n              return 0;\r\n            })\r\n            return {\r\n              ...state,\r\n              country: countriesSorted\r\n            }\r\n\r\n        case FILTER_BY_CONTINENT:\r\n           let CountriesByContinent = state.allCountries;\r\n           let filteredByContinent = action.payload === \"All\" ? CountriesByContinent : CountriesByContinent.filter(c => c.continent === action.payload);\r\n           return{\r\n            ...state,\r\n            country: filteredByContinent\r\n           }\r\n\r\n        case ORDER_BY_POPULATION:\r\n          let sortedByPopulation = action.payload === \"low\" ?\r\n          state.country.sort((a,b) => {\r\n            if(a.population > b.population){\r\n              return 1\r\n            }\r\n            if(a.population < b.population){\r\n              return -1\r\n            }\r\n            return 0\r\n          }) :\r\n          state.country.sort((a,b) => {\r\n            if(a.population > b.population){\r\n              return -1\r\n            }\r\n            if(a.population < b.population){\r\n              return 1\r\n            }\r\n            return 0\r\n          })\r\n          return{\r\n            ...state,\r\n            country: sortedByPopulation\r\n          }\r\n        \r\n        case GET_ONLY_COUNTRIES:\r\n          return{\r\n            ...state,\r\n            onlyCountries: action.payload\r\n          }\r\n        \r\n        case GET_ACTIVITY:\r\n          return{\r\n            ...state,\r\n            activity: action.payload\r\n          }\r\n\r\n        case COUNTRY_BY_ACTIVITY:\r\n          let country = state.country;\r\n          let filteredByActivity = action.payload === \"All\" ? country : country.filter(c => c.activity.find(a => a.name === action.payload));\r\n          return{\r\n            ...state,\r\n            country: filteredByActivity\r\n          }\r\n\r\n        default:\r\n          return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducer from \"../reducer/index.js\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n  \r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <Provider store={store}> \n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}